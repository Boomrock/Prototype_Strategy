// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel SetHeight
// The input vertex buffer
// В вычислительном шейдере

// Объявляем буфер для входных вертексов
StructuredBuffer<float3> inVertices;
// Объявляем переменную для положения меша
float3 MeshLocation;

int BiomCoefficient;
float Coefficient;
float Amplitude;

// Объявляем буфер для выходных вертексов
RWStructuredBuffer<float3> outVertices;
//Коэфиценты Актав


// The noise coefficient
#include "./Packages/jp.keijiro.noiseshader/Shader/ClassicNoise2D.hlsl"

float GetHeight(float2 pos)
{
        return ClassicNoise(pos* 100) ;
}
 
// Объявляем ядро вычислительного шейдера
[numthreads(8, 8, 1)]
void SetHeight(uint id : SV_DispatchThreadID)
{
        // Get the current vertex position from the input buffer
        float3 pos = inVertices[id];
        float Biom = GetHeight(pos.xz);

        // Apply the noise function to the y coordinate
        pos.y = GetHeight(pos.xz);

        // Write the modified vertex position to the output buffer
        outVertices[id] = pos;
}




